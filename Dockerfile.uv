#   Step 1
FROM python:3.13.9-slim-bookworm AS python-base

ENV PYTHONUNBUFFERED=1 \
    # prevents python creating .pyc files
    PYTHONDONTWRITEBYTECODE=1

#   Step 2: Python dependencies
FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim AS builder-base
# install system packages
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential \
  curl \
  libffi-dev \
  python3-cffi \
  python3-dev \
  python3-setuptools \
  python3-wheel \
  && rm -rf /var/lib/apt/lists/*

ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy
ENV WORKDIR=/app
WORKDIR $WORKDIR
# install python deps
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev

#   Step 3: Final composition
FROM python-base AS final
ENV PATH="/app/.venv/bin:$PATH"

ENV WORKDIR=/app
WORKDIR $WORKDIR

# From: https://hynek.me/articles/docker-uv/
RUN <<EOT
groupadd -r app
useradd -r -d /app -g app -N app
chown app:app /app
EOT

USER app

STOPSIGNAL SIGINT

COPY --chown=app:app --from=builder-base /app/.venv /app/.venv
COPY --chown=app:app app app

COPY --chown=app:app --from=ghcr.io/astral-sh/uv:latest /uv /bin/

CMD ["/bin/bash", "-c", "uv run fastapi run app/main.py --host 0.0.0.0 --port $PORT --workers 1"]