name: CI v3 Tests, Build docker image and Push to Docker Hub.

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  Check_if_job_should_run:
    name: Check if version is changed
    runs-on: ubuntu-latest
    #Only run on main repo, not forks
    if: ${{ github.event.repository.fork == false }}
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check if VERSION file changed
        id: check
        run: |
          version_changed=false
          if git diff HEAD~1 --name-only | grep -q "^VERSION$"; then
            echo "VERSION file has changed."
            version_changed=true
          else
            echo "VERSION file NOT changed."
          fi
          echo "version_changed=$version_changed" >> $GITHUB_OUTPUT

  Tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: Check_if_job_should_run
    if: ${{ github.event.repository.fork == false && needs.Check_if_job_should_run.outputs.version_changed == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python environment
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -v

      - name: All tests passed
        if: success()
        run: echo "All tests passed!"

  Docker_Build_and_Test_AMD64_Image:
    name: Builds and Tests AMD64 Docker Image
    runs-on: ubuntu-latest
    needs: Tests
    if: ${{ github.event.repository.fork == false && needs.Check_if_job_should_run.outputs.version_changed == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build amd64 Docker Image for testing
        run: docker buildx build --platform linux/amd64 -t backend_test_amd64 --load .

      - name: Make scripts executable
        run: chmod +x .github/scripts/tests.sh

      - name: Test Docker image
        run: .github/scripts/tests.sh backend_test_amd64
        env:
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          SECRET_KEY_TEST: ${{ secrets.SECRET_KEY_TEST }}

  Docker_Build_and_Test_ARM64_Image:
    name: Builds and Tests ARM64 Docker Image
    runs-on: ubuntu-24.04-arm
    needs: Tests
    if: ${{ github.event.repository.fork == false && needs.Check_if_job_should_run.outputs.version_changed == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build arm64 Docker Image for testing
        run: docker buildx build --platform linux/arm64 -t backend_test_arm64 --load .

      - name: Make scripts executable
        run: chmod +x .github/scripts/tests.sh

      - name: Test Docker image
        run: .github/scripts/tests.sh backend_test_arm64
        env:
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          SECRET_KEY_TEST: ${{ secrets.SECRET_KEY_TEST }}

  Docker_Build_and_Push_Docker_Image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs:
      - Docker_Build_and_Test_AMD64_Image
      - Docker_Build_and_Test_ARM64_Image
    if: ${{ github.event.repository.fork == false && needs.Check_if_job_should_run.outputs.version_changed == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run version validation
        run: |
          chmod +x .github/scripts/version.sh
          .github/scripts/version.sh

      - name: Set IMAGE_TAG from VERSION
        run: |
          IMAGE_TAG=$(cat VERSION)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Image tag set to $IMAGE_TAG"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Multi-Arch Docker Image
        run: |
          if [ "${GITHUB_REF##*/}" == "develop" ]; then
            docker buildx build --platform linux/amd64,linux/arm64 \
              -t chasadvancegroup4/chas_advance_backend:${{ env.IMAGE_TAG }} \
              -t chasadvancegroup4/chas_advance_backend:latest \
              --build-arg VERSION=${{ env.IMAGE_TAG }} \
              --push .
          elif [ "${GITHUB_REF##*/}" == "main" ]; then
            docker buildx build --platform linux/amd64,linux/arm64 \
              -t chasadvancegroup4/chas_advance_backend:${{ env.IMAGE_TAG }} \
              --build-arg VERSION=${{ env.IMAGE_TAG }} \
              --push .
          else
            echo "Not pushing image, branch is not develop or main."
          fi

  Deploy_to_Azure:
    name: Deploy Docker Image to Azure Web App
    runs-on: ubuntu-latest
    needs: Docker_Build_and_Push_Docker_Image
    if: ${{ github.event.repository.fork == false && needs.Check_if_job_should_run.outputs.version_changed == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set IMAGE_TAG from VERSION
        run: |
          IMAGE_TAG=$(cat VERSION)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Azure Web App container
        run: |
          az webapp config container set \
            -g team_4 \
            -n grupp4AWA \
            --container-image-name chasadvancegroup4/chas_advance_backend:${{ env.IMAGE_TAG }}
          az webapp restart -g team_4 -n grupp4AWA
