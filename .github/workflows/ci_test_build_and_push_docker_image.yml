name: CI v1 Tests, Build docker image and Push to Docker Hub.

on:
  push:
    branches:
      # - main
      # - develop
      - 77-7126-refactor-workflow-that-publishes-docker-image
  workflow_dispatch:

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python environment
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -v

      - name: All tests passed
        if: success()
        run: echo "All tests passed!"

  docker:
    name: Builds and Tests Docker Images
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build amd64 Docker Image for testing
        run: docker buildx build --platform linux/amd64 -t backend_test_amd64 --load .

      - name: Test Docker image
        run: .github/scripts/tests.sh backend_test_amd64
        env:
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          SECRET_KEY_TEST: ${{ secrets.SECRET_KEY_TEST }}

      - name: Build arm64 Docker Image for testing
        run: docker buildx build --platform linux/arm64 -t backend_test_arm64 --load .

      - name: Test Docker image
        run: .github/scripts/tests.sh backend_test_arm64
        env:
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          SECRET_KEY_TEST: ${{ secrets.SECRET_KEY_TEST }}

  docker_push:
    name: Push Multi-Arch Docker Image
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set docker Image tag
        run: |
          BRANCH=${GITHUB_REF##*/}
          if [ "$BRANCH" == "main" ]; then
            IMAGE_TAG="main-latest"
          elif [ "$BRANCH" == "develop" ]; then
              IMAGE_TAG="develop-latest"
          else
            IMAGE_TAG="latest"
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build & Push Multi-Arch Docker Image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t annaschwartzchas/chas_advance_backend:${{ env.IMAGE_TAG }} --push .
